# -*- coding: utf-8 -*-
"""dl lab4(RNN).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dePLJ2T3kEDd8LhAWoBIe-TwEi3b-3TS
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical
from tensorflow .keras.models import Sequential
from tensorflow.keras.layers import SimpleRNN,Dense, Flatten
import cv2
(x_train,y_train),(x_test,y_test)=mnist.load_data()
x_train=x_train/255.0
x_test=x_test/255.0

Y_train=to_categorical(y_train,num_classes=10)
Y_test=to_categorical(y_test,num_classes=10)

timesteps=x_train.shape[1]
input_dim=x_train.shape[2]

model=Sequential([
    SimpleRNN(128,input_shape=(timesteps,input_dim),activation='tanh'),
    Dense(64,activation='relu'),
    Dense(32,activation='relu'),
    Dense(16,activation='relu'),
    Dense(8,activation='relu'),
    Dense(10,activation='softmax')
])

model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])
model.fit(x_train,Y_train,epochs=10,batch_size=64,validation_split=0.2)

test_loss,test_acc=model.evaluate(x_test,Y_test,verbose=0.2)
print(f'Test Accuracy:{test_acc}')

#image_path='/content/7.jpg'
#image=cv2.imread(image_path,cv2.IMREAD_GRAYSCALE)
#image_resized=cv2.resize(image,(28,28))
#image_normalized=image_resized/255.0
#image_reshaped=np.reshape(image_normalized,(1,28,28))
#prediction=model.predict(image_reshaped)
#predicted_class=np.argmax(prediction)
#print(predicted_class)

